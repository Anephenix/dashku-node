// Generated by CoffeeScript 1.3.1
(function() {
  var request;

  request = require('request');

  this.apiUrl = "https://dashku.com";

  exports.setApiKey = function(value, cb) {
    if (cb == null) {
      cb = null;
    }
    this.apiKey = value;
    if (cb != null) {
      return cb();
    }
  };

  exports.setApiUrl = function(value, cb) {
    if (cb == null) {
      cb = null;
    }
    this.apiUrl = value;
    if (cb != null) {
      return cb();
    }
  };

  exports.getDashboards = function(cb) {
    var headers, url;
    url = "" + this.apiUrl + "/api/dashboards?apiKey=" + this.apiKey;
    headers = {
      accept: "application/json"
    };
    return request.get({
      url: url,
      headers: headers
    }, function(err, res, body) {
      body = JSON.parse(body);
      if (res.statusCode === 200) {
        return cb({
          status: 'success',
          dashboards: body
        });
      } else {
        return cb(body);
      }
    });
  };

  exports.getDashboard = function(id, cb) {
    var headers, url;
    url = "" + this.apiUrl + "/api/dashboards/" + id + "?apiKey=" + this.apiKey;
    headers = {
      accept: "application/json"
    };
    return request.get({
      url: url,
      headers: headers
    }, function(err, res, body) {
      body = JSON.parse(body);
      if (res.statusCode === 200) {
        return cb({
          status: 'success',
          dashboard: body
        });
      } else {
        return cb(body);
      }
    });
  };

  exports.createDashboard = function(body, cb) {
    var json, url;
    if (cb == null) {
      cb = null;
    }
    url = "" + this.apiUrl + "/api/dashboards?apiKey=" + this.apiKey;
    json = true;
    return request.post({
      url: url,
      body: body,
      json: json
    }, function(err, res, body) {
      if (res.statusCode === 202) {
        return cb({
          status: 'success',
          dashboard: body
        });
      } else {
        return cb(body);
      }
    });
  };

  exports.updateDashboard = function(body, cb) {
    var json, url;
    if (cb == null) {
      cb = null;
    }
    url = "" + this.apiUrl + "/api/dashboards/" + body._id + "?apiKey=" + this.apiKey;
    json = true;
    return request.put({
      url: url,
      body: body,
      json: json
    }, function(err, res, body) {
      if (res.statusCode === 201) {
        return cb({
          status: 'success',
          dashboard: body
        });
      } else {
        return cb(body);
      }
    });
  };

  exports.deleteDashboard = function(dashboardId, cb) {
    var headers, method, url;
    if (cb == null) {
      cb = null;
    }
    url = "" + this.apiUrl + "/api/dashboards/" + dashboardId + "?apiKey=" + this.apiKey;
    headers = {
      accept: "application/json"
    };
    method = "DELETE";
    return request.del({
      method: method,
      url: url,
      headers: headers
    }, function(err, res, body) {
      if (res.statusCode === 201) {
        return cb(JSON.parse(body));
      } else {
        return cb(JSON.parse(body));
      }
    });
  };

  exports.createWidget = function(body, cb) {
    var json, url;
    if (cb == null) {
      cb = null;
    }
    url = "" + this.apiUrl + "/api/dashboards/" + body.dashboardId + "/widgets?apiKey=" + this.apiKey;
    json = true;
    return request.post({
      url: url,
      body: body,
      json: json
    }, function(err, res, body) {
      if (res.statusCode === 202) {
        return cb({
          status: 'success',
          widget: body
        });
      } else {
        return cb(body);
      }
    });
  };

  exports.updateWidget = function(body, cb) {
    var json, url;
    if (cb == null) {
      cb = null;
    }
    url = "" + this.apiUrl + "/api/dashboards/" + body.dashboardId + "/widgets/" + body._id + "?apiKey=" + this.apiKey;
    json = true;
    return request.put({
      url: url,
      body: body,
      json: json
    }, function(err, res, body) {
      if (res.statusCode === 201) {
        return cb({
          status: 'success',
          widget: body
        });
      } else {
        return cb(body);
      }
    });
  };

  exports.deleteWidget = function(dashboardId, widgetId, cb) {
    var headers, method, url;
    if (cb == null) {
      cb = null;
    }
    url = "" + this.apiUrl + "/api/dashboards/" + dashboardId + "/widgets/" + widgetId + "?apiKey=" + this.apiKey;
    headers = {
      accept: "application/json"
    };
    method = "DELETE";
    return request({
      method: method,
      url: url,
      headers: headers
    }, function(err, res, body) {
      if (res.statusCode === 201) {
        return cb(JSON.parse(body));
      } else {
        return cb(JSON.parse(body));
      }
    });
  };

  exports.transmission = function(body, cb) {
    var json, url;
    if (cb == null) {
      cb = null;
    }
    url = "" + this.apiUrl + "/api/transmission?apiKey=" + this.apiKey;
    json = true;
    return request.post({
      url: url,
      body: body,
      json: json
    }, function(err, res, body) {
      if (res.statusCode === 200) {
        return cb({
          status: 'success'
        });
      } else {
        return cb(body);
      }
    });
  };

}).call(this);
